{"version":3,"file":"default-src_app_charts_temperatura_temperatura_module_ts.js","mappings":"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","sources":["./src/app/charts/temperatura/temperatura-routing.module.ts","./src/app/charts/temperatura/temperatura.module.ts","./src/app/charts/temperatura/temperatura.page.ts","./src/app/charts/temperatura/temperatura.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TemperaturaPage } from './temperatura.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TemperaturaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TemperaturaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TemperaturaPageRoutingModule } from './temperatura-routing.module';\nimport { TemperaturaPage } from './temperatura.page';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {  HttpClient } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TemperaturaPageRoutingModule,\n    TranslateModule,\n  ],\n  declarations: [TemperaturaPage],\n})\nexport class TemperaturaPageModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\nimport * as $ from 'jquery';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-temperatura',\r\n  templateUrl: './temperatura.page.html',\r\n  styleUrls: ['./temperatura.page.scss'],\r\n})\r\nexport class TemperaturaPage implements OnInit {\r\n\r\n  constructor(private navegacion : Router, private translate : TranslateService) { \r\n    this.translate.use(localStorage.getItem('idioma'));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.graficaTemperatura();\r\n    }\r\n\r\n    ionViewDidLeave(){\r\n    \r\n    }\r\n\r\n    onClick(){\r\n      this.navegacion.navigate(['/charts']);\r\n    }\r\n\r\n  graficaTemperatura() {\r\n    var ultimox, ultimoy;\r\n    var chart;\r\n    let num_tina = localStorage.getItem('idTina');\r\n    let tequilera = localStorage.getItem('tequilera');\r\n    let idiomas = localStorage.getItem('idioma');\r\n\r\n    setTimeout(function () {\r\n      if (idiomas === 'en') {\r\n        Highcharts.charts.forEach(function (ch) {\r\n          if (ch.options.title.text === 'Mediciones en Tiempo Real') {\r\n            ch.setTitle({ text: 'Real-Time Measurements' });\r\n            ch.xAxis[0].update({\r\n              title: {\r\n                text: 'Measurement Time',\r\n              },\r\n            });\r\n            ch.yAxis[0].update({\r\n              title: {\r\n                text: 'Values °C',\r\n              },\r\n            });\r\n            ch.series[0].name = 'Temperature';\r\n          }\r\n          ch.redraw();\r\n        });\r\n      }\r\n      else if (idiomas === 'de') {\r\n        Highcharts.charts.forEach(function (ch) {\r\n          if (ch.options.title.text === 'Mediciones en Tiempo Real') {\r\n            ch.setTitle({ text: 'Echtzeit-Messungen' });\r\n            ch.xAxis[0].update({\r\n              title: {\r\n                text: 'Zeitpunkt der Messung',\r\n              },\r\n            });\r\n            ch.yAxis[0].update({\r\n              title: {\r\n                text: 'Werte °C',\r\n              },\r\n            });\r\n            ch.series[0].name = 'Temperatur';\r\n          }\r\n          ch.redraw();\r\n        });\r\n      }\r\n    },1000);\r\n    \r\n    $.ajax({ \r\n    url:'https://www.ininbio.com/pruebasLocalesFull/datos_Grafica.php?idTina='+num_tina+'&tequilera='+tequilera,\r\n    type : \"GET\", \r\n    dataType : \"json\",\r\n    success : function(datosGrafica){\r\n    let temp = [];\r\n    $.each(datosGrafica, function(key,value){\r\n    if (value.x){datosGrafica[key].x = parseInt(value.x);}\r\n    if (value.y) {datosGrafica[key].y = parseFloat(value.y);}\r\n\r\n    temp.push([value.x, value.y]);\r\n    }); \r\n  \r\n   chart = Highcharts.chart('temperatura',{\r\n    chart: {\r\n    type: 'spline',\r\n    backgroundColor : 'transparent',\r\n    },\r\n    title: {\r\n    text: 'Mediciones en Tiempo Real',\r\n    align: 'center',\r\n    style: {\r\n      color: 'black'\r\n  }\r\n    },\r\n    credits: {\r\n      enabled: false\r\n  },\r\n    xAxis: {\r\n    type: 'datetime',\r\n    dateTimeLabelFormats: {\r\n    second: '%H:%M:%S %P',\r\n    },\r\n    title: {\r\n    text: 'Hora de Medición',\r\n    style: {\r\n      color: 'black'\r\n  }\r\n    },\r\n    labels: {\r\n      style: {\r\n          color: 'black'\r\n      }\r\n  },\r\n  gridLineColor: '#000000'\r\n    },\r\n    yAxis: [{\r\n    title : {\r\n      text : 'Valores °C',\r\n      style: {\r\n        color: 'black'\r\n    }\r\n    },\r\n    visible : true,\r\n    plotLines: [{\r\n    value: 0,\r\n    width: 1\r\n    }],\r\n    labels: {\r\n      style: {\r\n          color: 'black'\r\n      }\r\n  },\r\n  gridLineColor: 'black'\r\n    }],\r\n    tooltip: {\r\n    formatter: function () {\r\n    return '<b>' + this.series.name + '</b><br/>' +\r\n    Highcharts.dateFormat('%H:%M:%S %P',this.x) + '<br/>' +\r\n    Highcharts.numberFormat(this.y,2); \r\n    }\r\n    },\r\n    plotOptions: {\r\n      spline: {\r\n          marker: {\r\n              enabled: true\r\n          }\r\n      }\r\n  },\r\n    legend: {\r\n    enabled: false\r\n    },\r\n    exporting: {\r\n      enabled: false,\r\n      chartOptions: {\r\n        plotOptions: {\r\n            series: {\r\n                dataLabels: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    fallbackToExportServer: false\r\n  },\r\n    series: [{\r\n    name: 'Temperatura',\r\n    type : \"spline\",\r\n    yAxis : 0,\r\n    data: temp,\r\n    color : '#0833a2'\r\n    }]\r\n    });\r\n    }\r\n    });\r\n    setInterval(function () {\r\n    $.get(\"https://www.ininbio.com/pruebasLocalesFull/datos_Grafica.php?tinaIndividual=\"+num_tina+\"&tequilera=\"+tequilera+\"&Consultar=1\", function(UltimosDatos) {\r\n    var varlocalx=parseInt(UltimosDatos[0].x);\r\n    var varlocaly=parseFloat(UltimosDatos[0].y);\r\n    \r\n    if((getx()!=varlocalx)&&(gety()!=varlocaly)){\r\n    \r\n    chart.series[0].addPoint([varlocalx, varlocaly]);\r\n    }\r\n    });}, 1000);\r\n    function getx(){return ultimox;}\r\n    function gety(){return ultimoy;}\r\n    }\r\n\r\n    refrescar(){\r\n    window.location.assign('/charts');\r\n    }\r\n    \r\n}\r\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot = \\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/charts\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{\\\"PANTGRAF.GRAFICATEMP\\\" | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"fondo\\\"> \\n    <ion-card class=\\\"graficas\\\">\\n      <ion-card-header>\\n      </ion-card-header> \\n      <div id=\\\"temperatura\\\" style=\\\"display: block;\\\"></div>\\n    </ion-card>\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}